{"version":3,"sources":["services/storage.ts","enums.tsx","helpers/copy-to-clipboard.ts","helpers/base64.ts","helpers/queries.ts","static/decks-database.ts","static/i18n-database.ts","static/preferences-database.ts","static/themes-database.ts","contexts.ts","hooks/use-storage.ts","hooks/use-online-game.ts","hooks/use-room.ts","hooks/use-share.ts","hooks/use-wake-lock.ts","hooks/use-create-online-game-data.ts","components/card.tsx","components/page.tsx","components/navbar.tsx","components/card-list.tsx","components/logo.tsx","components/list-title.tsx","components/radio.tsx","components/select.tsx","components/container.tsx","components/toaster.tsx","components/outline-button.tsx","components/wait-screen.tsx","components/list.tsx","components/list-item.tsx","components/room-list-item.tsx","components/input-text.tsx","components/create-room-form.tsx","components/players-list.tsx","components/online-board.tsx","components/float.tsx","components/banner.tsx","components/debounce-input-text.tsx","hooks/use-debounce-input.tsx","screens/offline/styled.ts","screens/offline/index.tsx","screens/preferences/index.tsx","screens/lobby/index.tsx","screens/online/styled.ts","screens/online/index.tsx","screens/decks/index.tsx","routes.tsx","global-style.ts","app.tsx","hooks/use-connection.ts","hooks/use-theme-status.ts","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["KEY","process","put","value","asString","isJson","JSON","stringify","String","localStorage","getItem","setItem","get","parse","setup","storage","Boolean","remove","removeItem","e","generateId","Date","Sizes","Actions","Languages","Screens","Themes","IdScopes","copyToClipboard","text","navigator","clipboard","writeText","textArea","document","createElement","style","top","left","position","body","appendChild","focus","select","execCommand","removeChild","fallbackCopyToClipboard","encode","data","btoa","findFavorite","decks","favoriteDecks","filter","deck","favorite","length","scope","v1","isOnline","clients","online","Decks","id","name","description","custom","cards","isIcon","color","icon","i18n","PT_BT","HOME","backBtn","SETTINGS","version","language","theme","screen","settingsListTitle","weakLock","enableWakeLock","disableWakeLock","namePlaceholder","LOBBY","joinRoomBtn","shareRoomBtn","deleteRoomBtn","createRoomBtn","joinCopiedLink","createRoomPlaceholder","ONLINE","revealBtn","resetBtn","statusWaiting","statusAllPlayed","DECKS","decksListTitle","SHARED","offline","EN","preferences","line","TECH","Math","floor","random","wakeLock","themes","backgroundColor","cardBackgroundColor","mainFontColor","secondaryFontColor","lightFontColor","darkFontColor","cardFontColor","menuIconsColor","lineColor","primaryColor","secondaryColor","successColor","errorColor","disableColor","fontFamily","borderInputColor","DRACULA","ELETRIC","DARK_FOREST","StorageContext","createContext","StorageService","setStorage","console","log","reducer","state","action","type","SET_FAVORITE_DECK","produce","s","payload","map","SET_INITIAL_SCREEN","SET_LANGUAGE","SET_THEME","SET_CARDS_PER_LINE","quantity","ADD_ROOM","rooms","push","room","DELETE_ROOM","SET_NAME","SET_WAKE_LOCK","useStorage","target","useContext","useReducer","local","dispatch","useEffect","actions","updateFavorite","updateInitialScreen","updateLanguage","updateTheme","updateCardsPerLine","addRoom","deleteRoom","updateName","updateWakeLock","CLIENT_JOIN_GAME","clientState","UPDATE_GAME_STATE","REMOVE_DISCONNECTED_CLIENT","client","socketId","DISCONNECT_CLIENTS_FROM_HOST","HOST_CONNECTED","reconnect","SET_DECK","PLAY_CARD","userId","card","FINISH_TURN","config","finishedTurn","finish","RESET_GAME","useRoom","history","useHistory","copyShareTimer","useState","isCopied","setIsCopied","shareError","setShareError","share","url","catch","timeout","setTimeout","clearTimeout","useShare","sharing","shareRoom","deckId","createRoom","ROOM","owner","joinRoom","useWakeLock","enable","isWakeLockEnabled","setIsWakeLockEnabled","NoSleep","noSleep","sentinel","setSentinel","isEnabled","disable","a","request","requestWakeLock","addEventListener","enableNoSleep","removeEventListener","createGameData","search","query","qs","atob","decode","q","roomName","Wrapper","styled","div","FlipContainer","props","size","SM","MD","LG","Flipper","flipped","Front","Back","CardNumber","h3","CardStatus","Card","fixed","status","isFlipped","handleClick","setFlipped","onClick","Page","Nav","List","ListItem","LogoWrapper","StyledLink","NavLink","Dot","Navbar","matchHome","useRouteMatch","matchOnline","logo","isExact","active","to","Logo","width","height","activeStyle","Container","inline","grid","Array","fill","reduce","acc","CardWrapper","CardList","handleSelect","cardSize","xmlns","viewBox","preserveAspectRatio","transform","stroke","d","ListTitle","h2","Radio","StyledSelect","Select","onChange","selectedIndex","currentTarget","selectedOption","options","option","label","TextContainer","p","Toaster","show","OutlineButton","button","flat","block","responsiveGrow","Text","IconConainer","WaitScreen","spin","ul","Item","li","Title","LeadText","small","ButtonWrapper","IconWrapper","RoomListItem","join","InputText","input","FormGroup","ColInput","ColOptions","CreateRoomForm","setRoomName","setDeckId","submit","deckOptions","placeholder","event","AvatarContainer","Avatar","AvatarLetter","Indicator","PlayersList","players","player","playerName","substr","shouldRevealBoard","revealBoard","clientId","playerId","OnlineBoard","Float","Banner","onClose","DebounceInputText","setter","field","setField","executeDebounce","useCallback","debounce","useDebounceInput","setText","CardContainer","BackButton","Offline","setCard","undefined","Preferences","settingsOptions","languages","screens","float","Lobby","handleShareRoom","handleJoinRoom","roomId","Header","HeaderAction","Body","Footer","StatusContainer","Status","Online","userName","game","useLocation","init","io","socket","on","emit","disconnect","decksWithId","findDeck","gameState","gameActions","playCard","finishTurn","resetGame","useOnlineGame","crr","allPlayed","findClientById","isEqual","cardAlreadyPlayed","handleUpdateFavorite","Routes","initial","connected","hideBanner","setHideBanner","exact","path","GlobalStyle","createGlobalStyle","App","window","onLine","setNetwork","updateNetwork","useConnection","setThemeColor","themeColor","querySelector","meta","setAttribute","useThemeStatus","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","location","hostname","match","library","add","faEdit","faBoxOpen","faMugHot","faLongArrowAltLeft","faTrash","faSyncAlt","faShareAlt","faAngleRight","faCog","faInfinity","faTimes","faServer","faGlobeAmericas","faTh","faCrown","faUsers","faSpinner","USER","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7d3ae624.chunk.js","sourcesContent":["const KEY: string = process.env.REACT_APP_DATABASE;\n\nexport function put(value: LocalStorage) {\n  const asString = isJson(value) ? JSON.stringify(value) : String(value);\n  const current = localStorage.getItem(KEY);\n  current !== asString && localStorage.setItem(KEY, asString);\n}\n\nexport function get(): LocalStorage {\n  const value = localStorage.getItem(KEY) || \"\";\n  return isJson(value) ? JSON.parse(value) : value;\n}\n\nexport function setup(storage: LocalStorage) {\n  const value = localStorage.getItem(KEY) || \"\";\n\n  if (!Boolean(value)) {\n    put(storage);\n  }\n}\n\nexport function remove() {\n  localStorage.removeItem(KEY);\n}\n\nexport function isJson(value: LocalStorage | string) {\n  if (typeof value === \"object\") return true;\n\n  try {\n    JSON.parse(value);\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function generateId() {\n  return +new Date();\n}\n","export enum Sizes {\n  SM = \"sm\",\n  MD = \"md\",\n  LG = \"lg\",\n}\n\nexport enum Actions {\n  SET_FAVORITE_DECK = \"SET_FAVORITE_DECK\",\n  SET_LANGUAGE = \"SET_LANGUAGE\",\n  SET_CARDS_PER_LINE = \"SET_CARDS_PER_LINE\",\n  SET_THEME = \"SET_THEME\",\n  SET_INITIAL_SCREEN = \"SET_INITIAL_SCREEN\",\n  SET_NAME = \"SET_NAME\",\n  ADD_ROOM = \"ADD_ROOM\",\n  DELETE_ROOM = \"DELETE_ROOM\",\n  CLIENT_JOIN_GAME = \"CLIENT_JOIN_GAME\",\n  UPDATE_GAME_STATE = \"UPDATE_GAME_STATE\",\n  REMOVE_DISCONNECTED_CLIENT = \"REMOVE_DISCONNECTED_CLIENT\",\n  REMOVE_ROOM = \"REMOVE_ROOM\",\n  DISCONNECT_CLIENTS_FROM_HOST = \"DISCONNECT_CLIENTS_FROM_HOST\",\n  HOST_CONNECTED = \"HOST_CONNECTED\",\n  SET_DECK = \"SET_DECK\",\n  PLAY_CARD = \"PLAY_CARD\",\n  FINISH_TURN = \"FINISH_TURN\",\n  RESET_GAME = \"RESET_GAME\",\n  SET_WAKE_LOCK = \"SET_WAKE_LOCK\",\n}\n\nexport enum Languages {\n  PT_BT = \"pt_br\",\n  EN = \"en\",\n}\n\nexport enum Screens {\n  HOME = \"home\",\n  SETTINGS = \"settings\",\n  LOBBY = \"lobby\",\n  ONLINE = \"online\",\n  DECKS = \"decks\",\n  SHARED = \"shared\",\n}\n\nexport enum Themes {\n  TECH = \"tech\",\n  DRACULA = \"dracula\",\n  ELETRIC = \"eletric\",\n  DARK_FOREST = \"dark_forest\",\n}\n\nexport enum IdScopes {\n  USER = \"user\",\n  ROOM = \"room\",\n}\n","function fallbackCopyToClipboard(text: string) {\n  const textArea = document.createElement(\"textarea\");\n  textArea.value = text;\n  textArea.style.top = \"0\";\n  textArea.style.left = \"0\";\n  textArea.style.position = \"fixed\";\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  document.execCommand(\"copy\");\n  document.body.removeChild(textArea);\n}\n\nexport default function copyToClipboard(text: string) {\n  if (!navigator.clipboard) {\n    fallbackCopyToClipboard(text);\n    return;\n  }\n\n  navigator.clipboard.writeText(text);\n}\n","export function encode(data: string) {\n  return btoa(data);\n}\n\nexport function decode(data: string) {\n  return atob(data);\n}\n","import { v1 } from \"uuid\";\nimport { isEqual } from \"lodash\";\n\nexport function findDeck(decks: Deck[], id: string): Deck | null {\n  const decksWithId = decks.filter((deck) => deck.id === id);\n  return decksWithId.length > 0 ? decksWithId[0] : null;\n}\n\nexport function findFavorite(decks: Deck[]): Deck | null {\n  const favoriteDecks = decks.filter((deck) => deck.favorite);\n  return favoriteDecks.length > 0 ? favoriteDecks[0] : null;\n}\n\nexport function setFavorite(id: string, decks: Deck[]): Deck[] {\n  return decks.map((deck) => ({ ...deck, favorite: deck.id === id }));\n}\n\nexport function generateId(scope: string) {\n  return `${scope}/${v1()}`;\n}\n\nexport function alreadyJoined(rooms: Room[], id: string) {\n  return rooms.reduce((acc, crr) => crr.id === id || acc, false);\n}\n\nexport function isOnline(clients: GameClientState[]) {\n  if (clients.length === 0) return false;\n  return clients[0].online;\n}\n\nexport function allPlayed(clients: GameClientState[]): boolean {\n  return clients.reduce(\n    (acc: boolean, client: GameClientState): boolean => !!(acc && client.card),\n    true\n  );\n}\n\nexport function findClientById(clients: GameClientState[], id: string) {\n  const client = clients.filter((client) => client.id === id);\n  return client[0];\n}\n\nexport function cardAlreadyPlayed(\n  clients: GameClientState[],\n  id: string,\n  card: Card\n): boolean {\n  const client = findClientById(clients, id);\n  return isEqual(client.card, card);\n}\n","const Decks: Deck[] = [\n  {\n    id: \"deck/be5c0b60-52df-11eb-984d-51c641945009\",\n    name: \"fibonacci\",\n    description: \"Fibonacci\",\n    favorite: true,\n    custom: false,\n    cards: [\n      {\n        id: 1549212575,\n        value: \"0\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212576,\n        value: \"1\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212577,\n        value: \"2\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212578,\n        value: \"3\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212579,\n        value: \"5\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212580,\n        value: \"8\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212581,\n        value: \"13\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212582,\n        value: \"21\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212583,\n        value: \"34\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212584,\n        value: \"55\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212585,\n        value: \"89\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212586,\n        value: \"144\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212587,\n        value: \"infinity\",\n        isIcon: true,\n        color: \"\",\n        icon: \"infinity\",\n      },\n      {\n        id: 1549212588,\n        value: \"?\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212589,\n        value: \"mug-hot\",\n        isIcon: true,\n        color: \"\",\n        icon: \"mug-hot\",\n      },\n    ],\n  },\n  {\n    id: \"deck/be5c0b60-52df-11eb-984d-51c641945010\",\n    name: \"standard\",\n    description: \"Standard\",\n    favorite: false,\n    custom: false,\n    cards: [\n      {\n        id: 1549212590,\n        value: \"0\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212591,\n        value: \"1/2\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212592,\n        value: \"1\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212593,\n        value: \"2\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212594,\n        value: \"3\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212595,\n        value: \"5\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212596,\n        value: \"8\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212597,\n        value: \"13\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212598,\n        value: \"20\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212599,\n        value: \"40\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212600,\n        value: \"100\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212601,\n        value: \"infinity\",\n        isIcon: true,\n        color: \"\",\n        icon: \"infinity\",\n      },\n      {\n        id: 1549212602,\n        value: \"?\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212603,\n        value: \"mug-hot\",\n        isIcon: true,\n        color: \"\",\n        icon: \"mug-hot\",\n      },\n    ],\n  },\n  {\n    id: \"deck/be5c0b60-52df-11eb-984d-51c641945011\",\n    name: \"t-shirt\",\n    description: \"T-Shirt\",\n    favorite: false,\n    custom: false,\n    cards: [\n      {\n        id: 1549212604,\n        value: \"XS\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212605,\n        value: \"S\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212606,\n        value: \"M\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 154921267,\n        value: \"L\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212608,\n        value: \"XL\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212609,\n        value: \"XXL\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212610,\n        value: \"infinity\",\n        isIcon: true,\n        color: \"\",\n        icon: \"infinity\",\n      },\n      {\n        id: 1549212611,\n        value: \"?\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212612,\n        value: \"mug-hot\",\n        isIcon: true,\n        color: \"\",\n        icon: \"mug-hot\",\n      },\n    ],\n  },\n  {\n    id: \"deck/be5c0b60-52df-11eb-984d-51c641945012\",\n    name: \"risk\",\n    description: \"Risk Planning\",\n    favorite: false,\n    custom: false,\n    cards: [\n      {\n        id: 1549212613,\n        value: \"\",\n        isIcon: false,\n        color: \"#32B921\",\n      },\n      {\n        id: 1549212614,\n        value: \"\",\n        isIcon: false,\n        color: \"#F4D40C\",\n      },\n      {\n        id: 1549212615,\n        value: \"\",\n        isIcon: false,\n        color: \"#F56807\",\n      },\n      {\n        id: 1549212616,\n        value: \"\",\n        isIcon: false,\n        color: \"#7C0C84\",\n      },\n      {\n        id: 1549212617,\n        value: \"\",\n        isIcon: false,\n        color: \"#D41C0C\",\n      },\n      {\n        id: 1549212618,\n        value: \"infinity\",\n        isIcon: true,\n        color: \"\",\n        icon: \"infinity\",\n      },\n      {\n        id: 1549212619,\n        value: \"?\",\n        isIcon: false,\n        color: \"\",\n      },\n      {\n        id: 1549212620,\n        value: \"mug-hot\",\n        isIcon: true,\n        color: \"\",\n        icon: \"mug-hot\",\n      },\n    ],\n  },\n];\n\nexport default Decks;\n","import { Languages, Screens } from \"enums\";\n\nconst i18n: I18n.Modules = {\n  [Languages.PT_BT]: {\n    [Screens.HOME]: {\n      backBtn: \"Voltar\",\n    },\n    [Screens.SETTINGS]: {\n      version: \"Versão do App\",\n      language: \"Língua\",\n      cards: \"Cartas por Linha\",\n      theme: \"Tema\",\n      screen: \"Tela Inicial\",\n      settingsListTitle: \"Configurações\",\n      weakLock: \"Manter Tela Ligada\",\n      enableWakeLock: \"Habilitado\",\n      disableWakeLock: \"Desabilitado\",\n      name: \"Nome\",\n      namePlaceholder: \"Nome\",\n    },\n    [Screens.LOBBY]: {\n      joinRoomBtn: \"Entrar\",\n      shareRoomBtn: \"Compartilhar\",\n      deleteRoomBtn: \"Remover\",\n      createRoomBtn: \"Criar Sala\",\n      joinCopiedLink: \"Link da sala copiado\",\n      createRoomPlaceholder: \"nome da sala\",\n    },\n    [Screens.ONLINE]: {\n      revealBtn: \"Relevar Cartas\",\n      resetBtn: \"Resetar Partida\",\n      statusWaiting: \"Aguardando todos jogarem\",\n      statusAllPlayed: \"Todos jogaram\",\n    },\n    [Screens.DECKS]: {\n      decksListTitle: \"Decks\",\n    },\n    [Screens.SHARED]: {\n      offline: \"Sem conexão\",\n    },\n  },\n  [Languages.EN]: {\n    [Screens.HOME]: {\n      backBtn: \"Back\",\n    },\n    [Screens.SETTINGS]: {\n      version: \"App Version\",\n      language: \"Language\",\n      cards: \"Cards per line\",\n      theme: \"Theme\",\n      screen: \"Initial Screen\",\n      settingsListTitle: \"Settings\",\n      weakLock: \"Keep Screen Awake\",\n      enableWakeLock: \"Enable\",\n      disableWakeLock: \"Disable\",\n      name: \"Name\",\n      namePlaceholder: \"display name\",\n    },\n    [Screens.LOBBY]: {\n      joinRoomBtn: \"Join\",\n      shareRoomBtn: \"Share\",\n      deleteRoomBtn: \"Delete\",\n      createRoomBtn: \"Create Room\",\n      joinCopiedLink: \"Link to join copied\",\n      createRoomPlaceholder: \"room name\",\n    },\n    [Screens.ONLINE]: {\n      revealBtn: \"Reveal Cards\",\n      resetBtn: \"Reset Game\",\n      statusWaiting: \"Waiting others to play\",\n      statusAllPlayed: \"Everybody played\",\n    },\n    [Screens.DECKS]: {\n      decksListTitle: \"Decks\",\n    },\n    [Screens.SHARED]: {\n      offline: \"No connection\",\n    },\n  },\n};\n\nexport default i18n;\n","import { Languages, Themes, Screens } from \"enums\";\n\nconst preferences: Preferences = {\n  version: \"1.0.0\",\n  language: Languages.EN,\n  line: 3,\n  theme: Themes.TECH,\n  screen: Screens.HOME,\n  name: `${Math.floor(Math.random() * 100)} Player`,\n  wakeLock: \"enable\",\n};\n\nexport default preferences;\n","import { Themes } from \"enums\";\n\nconst themes: ThemeOptions = {\n  [Themes.TECH]: {\n    // Background\n    backgroundColor: \"#ffffff\",\n    cardBackgroundColor: \"#1565c0\",\n\n    // Text Color\n    mainFontColor: \"#616161\",\n    secondaryFontColor: \"#ffffff\",\n    lightFontColor: \"#9E9E9E\",\n    darkFontColor: \"#414141\",\n    cardFontColor: \"#ffffff\",\n    menuIconsColor: \"#212121\",\n\n    // Inputs\n    lineColor: \"#e3e3e3\",\n\n    // Misc colors\n    primaryColor: \"#1565c0\",\n    secondaryColor: \"#A6ABBD\",\n    successColor: \"#66bb6a\",\n    errorColor: \"#F44336\",\n    disableColor: \"#eeeeee\",\n\n    // Others\n    fontFamily: \"Arial, sans-serif\",\n    borderInputColor: \"#757575\",\n  },\n  [Themes.DRACULA]: {\n    backgroundColor: \"#282a36\",\n    lineColor: \"#424242\",\n    mainFontColor: \"#ffffff\",\n    secondaryFontColor: \"#ffffff\",\n    primaryColor: \"#bd93f9\",\n    lightFontColor: \"#cccccc\",\n    darkFontColor: \"#414141\",\n    secondaryColor: \"#8be9fd\",\n    errorColor: \"#FF1744\",\n    successColor: \"#50fa7b\",\n    cardBackgroundColor: \"#44475a\",\n    cardFontColor: \"#ffffff\",\n    disableColor: \"#e0e0e0\",\n    menuIconsColor: \"#f8f8f2\",\n    fontFamily: \"Arial, sans-serif\",\n    borderInputColor: \"#757575\",\n  },\n  [Themes.ELETRIC]: {\n    backgroundColor: \"#fff\",\n    lineColor: \"\",\n    mainFontColor: \"\",\n    secondaryFontColor: \"#ffffff\",\n    primaryColor: \"#ec407a\",\n    secondaryColor: \"#8be9fd\",\n    lightFontColor: \"#cccccc\",\n    darkFontColor: \"#414141\",\n    successColor: \"#50fa7b\",\n    errorColor: \"#FF1744\",\n    cardBackgroundColor: \"#6272a4\",\n    cardFontColor: \"\",\n    disableColor: \"#e0e0e0\",\n    menuIconsColor: \"\",\n    fontFamily: \"Arial, sans-serif\",\n    borderInputColor: \"#212121\",\n  },\n  [Themes.DARK_FOREST]: {\n    backgroundColor: \"#0f1c14\",\n    lineColor: \"#1b3324\",\n    mainFontColor: \"#f3f7eb\",\n    secondaryFontColor: \"#f3f7eb\",\n    primaryColor: \"#1e461b\",\n    secondaryColor: \"#3b3200\",\n    lightFontColor: \"#cccccc\",\n    darkFontColor: \"#414141\",\n    successColor: \"#9E9D24\",\n    errorColor: \"#FF1744\",\n    cardBackgroundColor: \"#1e461b\",\n    cardFontColor: \"#f3f7eb\",\n    disableColor: \"#e0e0e0\",\n    menuIconsColor: \"#f8f8f2\",\n    fontFamily: \"Arial, sans-serif\",\n    borderInputColor: \"#212121\",\n  },\n};\n\nexport default themes;\n","import { createContext } from \"react\";\nimport { StorageService } from \"services\";\n\nexport const StorageContext = createContext({\n  storage: StorageService.get(),\n  setStorage: (storage: LocalStorage) => {\n    console.log(storage);\n  },\n});\n","import { useReducer, useEffect, useContext } from \"react\";\nimport { StorageService } from \"services\";\nimport { Actions, Languages, Screens, Themes } from \"enums\";\nimport { setFavorite } from \"helpers\";\nimport { themes, i18n } from \"static\";\nimport { StorageContext } from \"contexts\";\nimport produce from \"immer\";\n\nexport function reducer(\n  state: LocalStorage,\n  action: ActionTypes.StorageActions\n): LocalStorage {\n  switch (action.type) {\n    case Actions.SET_FAVORITE_DECK: {\n      return produce(state, (s) => {\n        s.decks = setFavorite(action.payload.deck.id, state.decks);\n      });\n    }\n    case Actions.SET_INITIAL_SCREEN: {\n      return produce(state, (s) => {\n        s.preferences.screen = action.payload.screen;\n      });\n    }\n    case Actions.SET_LANGUAGE: {\n      return produce(state, (s) => {\n        s.preferences.language = action.payload.language;\n      });\n    }\n    case Actions.SET_THEME: {\n      return produce(state, (s) => {\n        s.preferences.theme = action.payload.theme;\n      });\n    }\n    case Actions.SET_CARDS_PER_LINE: {\n      return produce(state, (s) => {\n        s.preferences.line = action.payload.quantity;\n      });\n    }\n    case Actions.ADD_ROOM: {\n      return produce(state, (s) => {\n        s.online.rooms.push(action.payload.room);\n      });\n    }\n    case Actions.DELETE_ROOM: {\n      return produce(state, (s) => {\n        s.online.rooms = state.online.rooms.filter(\n          (room: Room) => room.id !== action.payload.id\n        );\n      });\n    }\n    case Actions.SET_NAME: {\n      return produce(state, (s) => {\n        s.preferences.name = action.payload.name;\n      });\n    }\n    case Actions.SET_WAKE_LOCK: {\n      return produce(state, (s) => {\n        s.preferences.wakeLock = action.payload.wakeLock;\n      });\n    }\n    default:\n      return state;\n  }\n}\n\nexport default function useStorage(target: Screens) {\n  const { storage, setStorage } = useContext(StorageContext);\n  const [local, dispatch] = useReducer(reducer, storage);\n\n  useEffect(() => {\n    StorageService.put(storage);\n    setStorage(local);\n  }, [local, setStorage, storage]);\n\n  const updateFavorite = (deck: Deck) =>\n    dispatch({ type: Actions.SET_FAVORITE_DECK, payload: { deck } });\n\n  const updateInitialScreen = (screen: Screens) =>\n    dispatch({ type: Actions.SET_INITIAL_SCREEN, payload: { screen } });\n\n  const updateLanguage = (language: Languages) =>\n    dispatch({ type: Actions.SET_LANGUAGE, payload: { language } });\n\n  const updateTheme = (theme: Themes) =>\n    dispatch({ type: Actions.SET_THEME, payload: { theme } });\n\n  const updateCardsPerLine = (quantity: number) =>\n    dispatch({ type: Actions.SET_CARDS_PER_LINE, payload: { quantity } });\n\n  const addRoom = (room: Room) =>\n    dispatch({ type: Actions.ADD_ROOM, payload: { room } });\n\n  const deleteRoom = (id: string) =>\n    dispatch({ type: Actions.DELETE_ROOM, payload: { id } });\n\n  const updateName = (name: string) =>\n    dispatch({ type: Actions.SET_NAME, payload: { name } });\n\n  const updateWakeLock = (wakeLock: string) =>\n    dispatch({ type: Actions.SET_WAKE_LOCK, payload: { wakeLock } });\n\n  return {\n    theme: themes[local.preferences.theme],\n    i18n: i18n[local.preferences.language][target],\n    storage: local,\n    actions: {\n      updateFavorite,\n      updateInitialScreen,\n      updateLanguage,\n      updateTheme,\n      updateCardsPerLine,\n      addRoom,\n      deleteRoom,\n      updateName,\n      updateWakeLock,\n    },\n  };\n}\n","import { useEffect, useState, useReducer } from \"react\";\nimport { findDeck } from \"helpers\";\nimport { io } from \"socket.io-client\";\nimport { Actions } from \"enums\";\nimport produce from \"immer\";\n\nfunction reducer(state: GameState, action: ActionTypes.GameActions) {\n  switch (action.type) {\n    case Actions.CLIENT_JOIN_GAME: {\n      return produce(state, (s) => {\n        s.clients.push(action.payload.clientState);\n      });\n    }\n    case Actions.UPDATE_GAME_STATE: {\n      return action.payload.state;\n    }\n    case Actions.REMOVE_DISCONNECTED_CLIENT: {\n      return produce(state, (s) => {\n        s.clients = s.clients.filter(\n          (client: GameClientState) =>\n            client.socketId !== action.payload.socketId\n        );\n      });\n    }\n    case Actions.DISCONNECT_CLIENTS_FROM_HOST: {\n      return produce(state, (s) => {\n        s.clients = s.clients.map(\n          (client: GameClientState): GameClientState => {\n            client.online = false;\n            return client;\n          }\n        );\n      });\n    }\n    case Actions.HOST_CONNECTED: {\n      return produce(state, (s) => {\n        s.reconnect = true;\n        s.clients = s.clients.map(\n          (client: GameClientState): GameClientState => {\n            client.online = true;\n            return client;\n          }\n        );\n      });\n    }\n    case Actions.SET_DECK: {\n      return produce(state, (s) => {\n        s.deck = action.payload.deck;\n      });\n    }\n    case Actions.PLAY_CARD: {\n      return produce(state, (s) => {\n        s.clients = s.clients.map(\n          (client: GameClientState): GameClientState => {\n            if (client.id === action.payload.userId) {\n              client.card = action.payload.card;\n            }\n            return client;\n          }\n        );\n      });\n    }\n    case Actions.FINISH_TURN: {\n      return produce(state, (s) => {\n        s.config.finishedTurn = action.payload.finish;\n      });\n    }\n    case Actions.RESET_GAME: {\n      return produce(state, (s) => {\n        s.config.finishedTurn = false;\n        s.clients = s.clients.map(\n          (client: GameClientState): GameClientState => {\n            client.card = null;\n            return client;\n          }\n        );\n      });\n    }\n    default:\n      return state;\n  }\n}\n\nexport default function useOnlineGame(\n  init: GameState,\n  room: Room,\n  id: string,\n  decks: Deck[],\n  playerName: string\n) {\n  const [socket] = useState(io(process.env.REACT_APP_HOST));\n  const [state, dispatch] = useReducer(reducer, init);\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.emit(\"JOIN_ROOM\", {\n        room: room.id,\n        owner: room.owner,\n        deckId: room.deckId,\n        id,\n        playerName,\n      });\n    });\n\n    socket.on(\"HOST_ACTION\", (action: any) => {\n      dispatch(action);\n    });\n\n    socket.on(\"CLIENTS_ACTION\", (action: any) => {\n      dispatch(action);\n    });\n\n    socket.on(\"DISCONNECT_CLIENTS_FROM_HOST\", (action: any) => {\n      dispatch(action);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  useEffect(() => {\n    if (room.owner) {\n      socket.emit(\"CALL_CLIENTS_ACTION\", {\n        type: Actions.UPDATE_GAME_STATE,\n        payload: { state, room: room.id, owner: room.owner },\n      });\n    }\n  }, [state, room]);\n\n  useEffect(() => {\n    if (state.reconnect) {\n      socket.emit(\"JOIN_ROOM\", {\n        room: room.id,\n        owner: room.owner,\n        id,\n        playerName,\n      });\n    }\n  }, [state.reconnect]);\n\n  useEffect(() => {\n    const deck = findDeck(decks, room.deckId);\n\n    if (deck) dispatch({ type: Actions.SET_DECK, payload: { deck } });\n\n    //request and download deck from host\n  }, [decks, room.deckId]);\n\n  const playCard = (card: Card, userId: string) => {\n    if (room.owner) {\n      dispatch({ type: Actions.PLAY_CARD, payload: { card, userId } });\n    } else {\n      socket.emit(\"CALL_HOST_ACTION\", {\n        type: Actions.PLAY_CARD,\n        payload: { card, userId, room: room.id },\n      });\n    }\n  };\n\n  const finishTurn = () =>\n    dispatch({\n      type: Actions.FINISH_TURN,\n      payload: { finish: true },\n    });\n\n  const resetGame = () => {\n    dispatch({\n      type: Actions.RESET_GAME,\n      payload: {},\n    });\n  };\n\n  return { gameState: state, gameActions: { playCard, finishTurn, resetGame } };\n}\n","import { useHistory } from \"react-router-dom\";\nimport { useShare, useStorage } from \"hooks\";\nimport { encode } from \"helpers\";\nimport { Screens, IdScopes } from \"enums\";\nimport { generateId } from \"helpers\";\n\nexport default function useRoom() {\n  const history = useHistory();\n  const { isCopied, share } = useShare();\n  const { storage, actions } = useStorage(Screens.SETTINGS);\n\n  function shareRoom(room: Room, deckId: string) {\n    const data = encode(\n      `room=${room.id}&join=false&deckId=${deckId}&roomName=${room.name}`\n    );\n\n    const url = `${process.env.REACT_APP_SHARE_LINK}/online?q=${data}`;\n\n    share(url);\n  }\n\n  function joinRoom(room: Room, deckId: string) {\n    const data = encode(\n      `room=${room.id}&join=true&owner=${room.owner}&deckId=${deckId}&roomName=${room.name}`\n    );\n    history.push(`/online?q=${data}`);\n  }\n\n  function createRoom(deckId: string, name: string) {\n    if (!name) return;\n\n    actions.addRoom({\n      id: generateId(IdScopes.ROOM),\n      owner: true,\n      deckId: deckId,\n      name: name,\n    });\n  }\n\n  return {\n    rooms: storage.online.rooms,\n    sharing: isCopied,\n    shareRoom,\n    createRoom,\n    joinRoom,\n    deleteRoom: actions.deleteRoom,\n  };\n}\n","import { useState, useEffect } from \"react\";\nimport { copyToClipboard } from \"helpers\";\n\nexport default function useShare(copyShareTimer: number = 3000) {\n  const [isCopied, setIsCopied] = useState(false);\n  const [shareError, setShareError] = useState(null);\n\n  useEffect(() => {\n    let timeout: ReturnType<typeof setTimeout>;\n\n    if (isCopied) {\n      timeout = setTimeout(() => {\n        setIsCopied(false);\n      }, copyShareTimer);\n    }\n\n    return () => clearTimeout(timeout);\n  }, [isCopied, copyShareTimer]);\n\n  function share(text: string) {\n    if (navigator.share) {\n      navigator.share({ url: text }).catch(setShareError);\n    } else {\n      setIsCopied(true);\n      copyToClipboard(text);\n    }\n  }\n\n  return { isCopied, shareError, share };\n}\n","import { useState, useEffect } from \"react\";\nimport NoSleep from \"nosleep.js\";\n\nexport default function useWakeLock(enable: string) {\n  const [isWakeLockEnabled, setIsWakeLockEnabled] = useState(false);\n  const [noSleep] = useState(new NoSleep());\n  const [sentinel, setSentinel] = useState(null);\n\n  function fallback() {\n    function enableNoSleep() {\n      document.removeEventListener(\"click\", enableNoSleep, false);\n      noSleep.enable();\n    }\n\n    document.addEventListener(\"click\", enableNoSleep, false);\n  }\n\n  useEffect(() => {\n    if (enable !== \"enable\" || noSleep.isEnabled) {\n      noSleep.disable();\n      setIsWakeLockEnabled(false);\n      return;\n    }\n\n    async function requestWakeLock() {\n      let wakeLock = null;\n\n      try {\n        wakeLock = await (navigator as any).wakeLock.request(\"screen\");\n      } finally {\n        setSentinel(wakeLock);\n      }\n    }\n\n    if (\"wakeLock\" in navigator) {\n      setIsWakeLockEnabled(true);\n      requestWakeLock();\n    } else {\n      fallback();\n    }\n  }, [enable]);\n\n  return { isWakeLockEnabled, sentinel };\n}\n","import { useLocation } from \"react-router-dom\";\nimport qs from \"query-string\";\n\nimport { decode } from \"helpers\";\n\nfunction createGameData(search: string) {\n  const query = qs.parse(search);\n  const data = qs.parse(decode(String(query.q)));\n\n  return {\n    id: String(data.room),\n    owner: data.owner === \"true\",\n    deckId: String(data.deckId),\n    name: String(data.roomName),\n  };\n}\n\nexport default function useCreateOnlineGameData() {\n  const { search } = useLocation();\n  return createGameData(search);\n}\n","import styled from \"styled-components\";\nimport { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Sizes } from \"enums\";\n\nconst Wrapper = styled.div<{ size: Sizes }>`\n  padding: 10px;\n  position: relative;\n`;\n\nconst FlipContainer = styled.div<{ size: Sizes }>`\n  perspective: 800px;\n  cursor: pointer;\n  text-align: center;\n\n  ${(props) =>\n    props.size === Sizes.SM &&\n    `\n    height: 110px;\n    width: 100%;\n  `};\n\n  ${(props) =>\n    props.size === Sizes.MD &&\n    `\n    height: 110px;\n    width: 100%;\n  `};\n\n  ${(props) =>\n    props.size === Sizes.LG &&\n    `\n    height: 400px;\n    max-width: 315px;\n    margin: 0 auto;\n  `};\n`;\n\nconst Flipper = styled.div<{ flipped: boolean }>`\n  width: 100%;\n  height: 100%;\n  transition: transform 0.8s;\n  transform-style: preserve-3d;\n  ${(props) => props.flipped && `transform: rotateY(180deg);`}\n`;\n\nconst Front = styled.div<{ size: Sizes; color: string }>`\n  position: absolute;\n  backface-visibility: hidden;\n  background-color: ${(props) =>\n    props.color ? props.color : props.theme.cardBackgroundColor};\n  border-radius: 8px;\n  display: block;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  color: ${(props) => props.theme.cardFontColor};\n\n  ${(props) =>\n    props.size === Sizes.SM &&\n    `\n    border: 5px solid #fff;\n    height: calc(100% - 10px);\n    width: calc(100% - 10px);\n  `};\n\n  ${(props) =>\n    props.size === Sizes.MD &&\n    `\n    border: 5px solid #fff;\n    height: calc(100% - 10px);\n    width: calc(100% - 10px);\n  `};\n\n  ${(props) =>\n    props.size === Sizes.LG &&\n    `\n    height: calc(100% - 30px);\n    width: calc(100% - 30px);\n    border: 15px solid #fff;\n  `};\n`;\n\nconst Back = styled.div<{ size: Sizes }>`\n  position: absolute;\n  backface-visibility: hidden;\n  transform: rotateY(180deg);\n  background-color: ${(props) => props.theme.cardBackgroundColor};\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  border-radius: 8px;\n\n  ${(props) =>\n    props.size === Sizes.SM &&\n    `\n    border: 5px solid #fff;\n    height: calc(100% - 10px);\n    width: calc(100% - 10px);\n  `};\n\n  ${(props) =>\n    props.size === Sizes.MD &&\n    `\n    border: 5px solid #fff;\n    height: calc(100% - 10px);\n    width: calc(100% - 10px);\n  `};\n\n  ${(props) =>\n    props.size === Sizes.LG &&\n    `\n    height: calc(100% - 30px);\n    width: calc(100% - 30px);\n    border: 15px solid #fff;\n  `};\n`;\n\nconst CardNumber = styled.h3<{ size: Sizes }>`\n  margin: 0px;\n  font-family: Arial, sans-serif;\n\n  ${(props) =>\n    props.size === Sizes.SM &&\n    `\n    font-size: 30px;\n    line-height: 85px;\n  `};\n\n  ${(props) =>\n    props.size === Sizes.MD &&\n    `\n    font-size: 40px;\n    line-height: 100px;\n  `};\n\n  ${(props) =>\n    props.size === Sizes.LG &&\n    `\n    font-size: 125px;\n    line-height: 375px;\n  `};\n`;\n\nconst CardStatus = styled.div`\n  position: absolute;\n  text-align: center;\n  width: 100%;\n  bottom: 0;\n  margin-bottom: 5px;\n  text-transform: uppercase;\n  font-size: 10px;\n  font-weight: bold;\n  color: ${(props) => props.theme.cardFontColor};\n`;\n\ntype CardProps = {\n  card: Card;\n  fixed: boolean;\n  size: Sizes;\n  status?: string;\n  isFlipped?: boolean;\n  handleClick?: (card: Card) => void;\n};\n\nexport default function Card({\n  card,\n  size,\n  fixed,\n  status = \"\",\n  isFlipped = false,\n  handleClick,\n}: CardProps) {\n  const [flipped, setFlipped] = useState(isFlipped);\n\n  useEffect(() => {\n    setFlipped(isFlipped);\n  }, [isFlipped]);\n\n  function onClick() {\n    handleClick && handleClick(card);\n    !fixed && setFlipped(!flipped);\n  }\n\n  return (\n    <Wrapper size={size}>\n      <FlipContainer size={size} onClick={onClick}>\n        <Flipper flipped={flipped}>\n          <Front color={card.color} size={size}>\n            <CardNumber size={size}>\n              {card.isIcon && card.icon ? (\n                <FontAwesomeIcon icon={card.icon} />\n              ) : (\n                card.value\n              )}\n            </CardNumber>\n            {status && <CardStatus>{status}</CardStatus>}\n          </Front>\n          <Back size={size} />\n        </Flipper>\n      </FlipContainer>\n    </Wrapper>\n  );\n}\n","import styled from \"styled-components\";\n\nconst Page = styled.div`\n  background-color: ${(props) => props.theme.backgroundColor};\n  max-width: 575.98px;\n  margin: 0 auto;\n  font-family: ${(props) => props.theme.fontFamily};\n  padding-top: 57px;\n  min-height: calc(100vh - 57px);\n\n  @media only screen and (max-width: 600px) {\n    padding-top: 7px;\n    padding-bottom: 64px;\n    min-height: calc(100vh - 71px);\n  }\n`;\n\nexport default Page;\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Logo } from \"components\";\nimport { useRouteMatch } from \"react-router-dom\";\nimport { Screens } from \"enums\";\n\nconst Nav = styled.div`\n  position: fixed;\n  z-index: 5;\n  width: 100%;\n  height: 50px;\n  border-bottom: 1px solid ${(props) => props.theme.lineColor};\n  border-top: 1px solid ${(props) => props.theme.lineColor};\n  background-color: ${(props) => props.theme.backgroundColor};\n\n  @media only screen and (max-width: 600px) {\n    bottom: 0;\n  }\n`;\n\nconst List = styled.div`\n  margin: 0 auto;\n  max-width: 575.98px;\n  display: flex;\n  list-style: none;\n  justify-content: space-around;\n`;\n\nconst ListItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 23px;\n  margin-top: 5px;\n`;\n\nconst LogoWrapper = styled.div`\n  margin-top: 5px;\n`;\n\nconst StyledLink = styled(NavLink)`\n  color: ${(props) => props.theme.menuIconsColor};\n  position: relative;\n`;\n\nconst Dot = styled.div`\n  width: 8px;\n  height: 8px;\n  background-color: ${(props) => props.theme.successColor};\n  position: absolute;\n  top: 16px;\n  left: 16px;\n  border-radius: 50%;\n`;\n\nexport default function Navbar({ theme }: { theme: Theme }) {\n  const { primaryColor, menuIconsColor } = theme;\n  const matchHome = useRouteMatch(\"/home\");\n  const matchOnline = useRouteMatch(\"/online\");\n  const logo = matchHome && matchHome.isExact ? primaryColor : menuIconsColor;\n  const active = { color: primaryColor };\n\n  return (\n    <Nav>\n      <List>\n        <ListItem>\n          <StyledLink to={Screens.HOME}>\n            <LogoWrapper>\n              <Logo color={logo} width=\"29px\" height=\"29px\" />\n            </LogoWrapper>\n          </StyledLink>\n        </ListItem>\n        <ListItem>\n          <StyledLink activeStyle={active} to={Screens.DECKS}>\n            <FontAwesomeIcon icon=\"th\" />\n          </StyledLink>\n        </ListItem>\n        <ListItem>\n          <StyledLink activeStyle={active} to={Screens.LOBBY}>\n            <FontAwesomeIcon icon=\"globe-americas\" />\n            {matchOnline && matchOnline.isExact && <Dot />}\n          </StyledLink>\n        </ListItem>\n        <ListItem>\n          <StyledLink activeStyle={active} to={Screens.SETTINGS}>\n            <FontAwesomeIcon icon=\"cog\" />\n          </StyledLink>\n        </ListItem>\n      </List>\n    </Nav>\n  );\n}\n","import styled from \"styled-components\";\nimport { Card } from \"components\";\nimport { Sizes } from \"enums\";\n\nconst createGrid = (size: number) =>\n  Array(size - 1)\n    .fill(\"\")\n    .reduce((acc) => `${acc} auto`, \"auto\");\n\nconst Container = styled.div<{ grid: number; inline: boolean }>`\n  display: ${(props) => (props.inline ? \"flex\" : \"grid\")};\n\n  ${(props) =>\n    !props.inline && `grid-template-columns: ${createGrid(props.grid)};`}\n`;\n\nconst CardWrapper = styled.div<{ inline: boolean }>`\n  ${(props) => props.inline && \"width: 100px;\"}\n  ${(props) => props.inline && \"flex: 0 0 auto;\"}\n`;\n\ntype CardListProps = {\n  deck: Deck | null;\n  grid: number;\n  handleSelect: (card: Card) => void;\n  inline?: boolean;\n  cardSize?: Sizes;\n};\n\nexport default function CardList({\n  deck,\n  grid,\n  handleSelect,\n  cardSize = Sizes.SM,\n  inline = false,\n}: CardListProps) {\n  return (\n    <Container grid={grid} inline={inline}>\n      {deck?.cards.map((card) => (\n        <CardWrapper inline={inline} key={card.id}>\n          <Card\n            handleClick={handleSelect}\n            size={cardSize}\n            card={card}\n            fixed={true}\n          />\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n}\n","type LogoProps = {\n  color: string;\n  width: string;\n  height: string;\n};\n\nexport default function Logo({ color, width, height }: LogoProps) {\n  return (\n    <svg\n      version=\"1.0\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 512.000000 512.000000\"\n      preserveAspectRatio=\"xMidYMid meet\"\n    >\n      <g\n        transform=\"translate(0.000000,485.000000) scale(0.100000,-0.100000)\"\n        fill={color}\n        stroke=\"none\"\n      >\n        <path\n          d=\"M1855 4550 c-550 -54 -1017 -101 -1038 -103 -42 -6 -75 -29 -88 -64\n  -9 -25 305 -3265 320 -3300 6 -12 24 -29 40 -38 28 -14 55 -13 343 16 172 17\n  315 32 316 34 4 4 172 1606 172 1637 0 15 -9 13 -64 -13 -49 -23 -84 -31 -151\n  -36 l-87 -6 7 -152 7 -152 -89 -6 c-48 -3 -91 -2 -94 1 -4 4 -16 196 -28 426\n  -17 314 -19 421 -11 426 7 4 87 10 178 14 195 8 249 0 324 -50 28 -19 52 -33\n  53 -32 1 2 23 210 49 462 32 316 52 470 63 493 21 44 65 75 116 80 34 4 567\n  -46 778 -73 l45 -5 -23 228 c-12 125 -25 238 -28 251 -6 26 -60 62 -90 61 -11\n  -1 -470 -45 -1020 -99z\"\n        />\n        <path\n          d=\"M2290 4003 c-29 -11 -60 -47 -65 -77 -3 -17 -84 -755 -180 -1639\n  -122 -1124 -171 -1615 -165 -1632 21 -55 -4 -51 1105 -171 845 -91 1050 -110\n  1078 -102 30 9 37 17 46 52 21 78 361 3265 351 3291 -22 58 82 44 -2110 279\n  -25 2 -52 2 -60 -1z m716 -922 c244 -45 316 -79 360 -175 44 -95 23 -230 -49\n  -312 -67 -76 -157 -101 -295 -83 -46 6 -85 9 -88 6 -2 -2 -16 -66 -29 -142\n  -14 -76 -27 -140 -30 -143 -5 -5 -160 19 -173 27 -8 5 21 181 124 759 9 50 17\n  92 18 92 1 0 74 -13 162 -29z m366 -811 c117 -23 162 -36 218 -66 179 -94 243\n  -273 180 -504 -57 -211 -238 -322 -475 -291 -99 14 -284 47 -289 52 -3 3 37\n  235 130 757 l16 92 37 -6 c20 -3 102 -19 183 -34z\"\n        />\n        <path\n          d=\"M3000 2918 c0 -3 -9 -56 -20 -118 -23 -127 -23 -129 45 -131 101 -5\n  138 11 161 66 29 71 8 133 -53 158 -39 15 -133 33 -133 25z\"\n        />\n        <path\n          d=\"M3307 2098 c-16 -71 -89 -510 -85 -513 3 -3 31 -10 64 -16 182 -34\n  291 61 310 272 16 164 -56 247 -239 274 -41 6 -45 5 -50 -17z\"\n        />\n        <path\n          d=\"M1600 3008 c0 -40 3 -97 7 -126 l6 -54 56 7 c108 13 151 50 151 129\n  0 84 -41 116 -150 116 l-70 0 0 -72z\"\n        />\n      </g>\n    </svg>\n  );\n}\n","import styled from \"styled-components\";\n\nconst ListTitle = styled.h2`\n  font-family: ${(props) => props.theme.fontFamily};\n  font-size: 11px;\n  color: ${(props) => props.theme.mainFontColor};\n  border-bottom: 1px solid ${(props) => props.theme.lineColor};\n  padding: 0px 7px 5px;\n  margin: 0px;\n  font-weight: normal;\n`;\n\nexport default ListTitle;\n","import styled from \"styled-components\";\n\ntype RadioProps = { active: boolean };\n\nconst Radio = styled.div<RadioProps>`\n  height: 10px;\n  width: 10px;\n  border-radius: 50%;\n  position: relative;\n  top: 0;\n  float: right;\n  margin: 30px 20px 0;\n  cursor: pointer;\n  background-color: ${(props) =>\n    props.active ? props.theme.successColor : props.theme.disableColor};\n`;\n\nexport default Radio;\n","import styled from \"styled-components\";\n\nconst StyledSelect = styled.select`\n  padding: 9px 14px;\n  background-color: ${(props) => props.theme.backgroundColor};\n  border: 1px solid ${(props) => props.theme.borderInputColor};\n  color: ${(props) => props.theme.mainFontColor};\n`;\n\ntype OptionValue = string | number;\n\ntype Option<T extends OptionValue> = {\n  value: T;\n  label: string;\n};\n\ntype Props<T extends OptionValue> = {\n  options: Option<T>[];\n  value: T;\n  onChange: (value: T) => void;\n};\n\nexport default function Select<T extends OptionValue>(props: Props<T>) {\n  function handleOnChange(e: React.FormEvent<HTMLSelectElement>) {\n    const { selectedIndex } = e.currentTarget;\n    const selectedOption = props.options[selectedIndex];\n    props.onChange(selectedOption.value);\n  }\n\n  return (\n    <StyledSelect value={props.value} onChange={handleOnChange}>\n      {props.options.map((option) => (\n        <option key={option.value} value={option.value}>\n          {option.label}\n        </option>\n      ))}\n    </StyledSelect>\n  );\n}\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  background-color: ${(props) => props.theme.backgroundColor};\n`;\n\nexport default Container;\n","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  max-width: 575.98px;\n  color: ${(props) => props.theme.darkFontColor};\n  background-color: ${(props) => props.theme.secondaryColor};\n  z-index: 6;\n  border-radius: 4px;\n`;\n\nconst TextContainer = styled.p`\n  margin: 0;\n  padding: 20px;\n  font-weight: bold;\n  text-transform: uppercase;\n  font-size: 12px;\n`;\n\ntype ToasterProps = {\n  show: boolean;\n  text: string;\n};\n\nexport default function Toaster({ show, text }: ToasterProps) {\n  return show ? (\n    <Container>\n      <TextContainer>{text}</TextContainer>\n    </Container>\n  ) : (\n    <></>\n  );\n}\n","import styled from \"styled-components\";\n\ntype OutlineButtonProps = {\n  block: boolean;\n  flat: boolean;\n  responsiveGrow?: boolean;\n};\n\nconst OutlineButton = styled.button<OutlineButtonProps>`\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.borderInputColor};\n  text-align: center;\n  padding: 10px 15px;\n  ${(props) => !props.flat && \"border-radius: 4px;\"}\n  ${(props) => props.block && \"width: 100%;\"}\n  outline: none;\n  cursor: pointer;\n  color: ${(props) => props.theme.mainFontColor};\n  white-space: nowrap;\n  &:hover {\n    opacity: 0.6;\n  }\n\n  @media only screen and (max-width: 600px) {\n    ${(props) => props.responsiveGrow && \"width: 100%\"}\n  }\n`;\n\nexport default OutlineButton;\n","import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Wrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n  max-width: 575.98px;\n  position: absolute;\n  background-color: #212121;\n  opacity: 0.9;\n  top: 0;\n  backdrop-filter: blur(6px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-transform: uppercase;\n  font-weight: bold;\n  flex-direction: column;\n`;\n\nconst Text = styled.div`\n  color: white;\n`;\n\nconst IconConainer = styled.div`\n  color: white;\n  margin-bottom: 15px;\n`;\n\ntype WaitScreenProps = {\n  show: boolean;\n  text: string;\n};\n\nexport default function WaitScreen({ show, text }: WaitScreenProps) {\n  return show ? (\n    <Wrapper>\n      <IconConainer>\n        <FontAwesomeIcon icon=\"spinner\" size=\"2x\" spin />\n      </IconConainer>\n      <Text>{text}</Text>\n    </Wrapper>\n  ) : (\n    <></>\n  );\n}\n","import styled from \"styled-components\";\n\nconst List = styled.ul`\n  margin: 0px 0px 5px 0px;\n  padding: 0px;\n  list-style: none;\n`;\n\nexport default List;\n","import styled from \"styled-components\";\n\nconst Item = styled.li`\n  font-family: ${(props) => props.theme.fontFamily};\n  font-weight: bold;\n  font-size: 14px;\n  color: ${(props) => props.theme.mainFontColor};\n  padding: 25px 20px;\n  border-bottom: 1px solid ${(props) => props.theme.lineColor};\n  cursor: pointer;\n`;\n\nexport default Item;\n","import styled from \"styled-components\";\nimport { OutlineButton } from \"components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 14px;\n  margin: 0;\n`;\n\nconst LeadText = styled.small`\n  color: ${(props) => props.theme.lightFontColor};\n  display: block;\n  margin-bottom: 20px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: inline-block;\n  margin-right: 5px;\n`;\n\nconst IconWrapper = styled.div`\n  float: right;\n`;\n\ntype RoomListItemProps = {\n  room: Room;\n  share: () => void;\n  join: () => void;\n  remove: () => void;\n  text: I18n.LobbyScreen;\n};\n\nexport default function RoomListItem({\n  room,\n  share,\n  join,\n  remove,\n  text,\n}: RoomListItemProps) {\n  return (\n    <>\n      <IconWrapper>\n        {room.owner ? (\n          <FontAwesomeIcon icon=\"crown\" />\n        ) : (\n          <FontAwesomeIcon icon=\"users\" />\n        )}\n      </IconWrapper>\n\n      <Title>{room.name}</Title>\n      <LeadText>{room.id}</LeadText>\n      <ButtonWrapper>\n        <OutlineButton flat={false} block={false} onClick={join}>\n          {text.joinRoomBtn}\n        </OutlineButton>\n      </ButtonWrapper>\n      <ButtonWrapper>\n        <OutlineButton flat={false} block={false} onClick={share}>\n          {text.shareRoomBtn}\n        </OutlineButton>\n      </ButtonWrapper>\n      <ButtonWrapper>\n        <OutlineButton flat={false} block={false} onClick={remove}>\n          {text.deleteRoomBtn}\n        </OutlineButton>\n      </ButtonWrapper>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nconst InputText = styled.input`\n  padding: 10px 15px;\n  border-radius: 0px;\n  border: 1px solid ${(props) => props.theme.borderInputColor};\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nexport default InputText;\n","import styled from \"styled-components\";\nimport { Select, OutlineButton, InputText } from \"components\";\n\nconst FormGroup = styled.div`\n  width: 100%;\n  display: flex;\n\n  @media only screen and (max-width: 600px) {\n    flex-direction: column;\n  }\n`;\n\nconst ColInput = styled.div`\n  flex-grow: 1;\n`;\n\nconst ColOptions = styled.div`\n  display: flex;\n`;\n\ntype CreateRoomFormProps = {\n  roomName: string;\n  setRoomName: (name: string) => void;\n  decks: Deck[];\n  deckId: string;\n  setDeckId: (deckId: string) => void;\n  submit: () => void;\n  text: I18n.LobbyScreen;\n};\n\nfunction CreateRoomForm({\n  roomName,\n  setRoomName,\n  decks,\n  deckId,\n  setDeckId,\n  submit,\n  text,\n}: CreateRoomFormProps) {\n  const deckOptions = decks.map((deck) => ({\n    value: deck.id,\n    label: deck.name,\n  }));\n\n  return (\n    <FormGroup>\n      <ColInput>\n        <InputText\n          placeholder={text.createRoomPlaceholder}\n          value={roomName}\n          onChange={(event) => setRoomName(event.target.value)}\n        />\n      </ColInput>\n      <ColOptions>\n        <Select options={deckOptions} value={deckId} onChange={setDeckId} />\n        <OutlineButton\n          responsiveGrow\n          flat={true}\n          block={false}\n          onClick={submit}\n        >\n          {text.createRoomBtn}\n        </OutlineButton>\n      </ColOptions>\n    </FormGroup>\n  );\n}\n\nexport default CreateRoomForm;\n","import styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  padding: 0 10px;\n  box-sizing: border-box;\n  max-width: 100%;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  padding: 10px 0;\n`;\n\nconst AvatarContainer = styled.div`\n  position: relative;\n`;\n\nconst Avatar = styled.div`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  border: 1px solid ${(props) => props.theme.lineColor};\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  margin-right: 10px;\n  display: flex;\n`;\n\nconst AvatarLetter = styled.p`\n  font-size: 12px;\n  text-transform: uppercase;\n  margin: 0;\n  color: ${(props) => props.theme.mainFontColor};\n`;\n\nconst Indicator = styled.div<{ online: boolean }>`\n  width: 8px;\n  height: 8px;\n  background-color: ${(props) =>\n    props.online ? props.theme.successColor : \"red\"};\n  border-radius: 50%;\n  position: absolute;\n  bottom: 0;\n  right: 17px;\n`;\n\ntype PlayersListProps = { players: GameClientState[] };\n\nfunction PlayersList({ players }: PlayersListProps) {\n  return (\n    <Wrapper>\n      <Container>\n        {players.map((player) => (\n          <AvatarContainer key={player.id}>\n            <Avatar>\n              <AvatarLetter>\n                {player.playerName && player.playerName.substr(0, 3)}\n              </AvatarLetter>\n              <Indicator online={player.online} />\n            </Avatar>\n          </AvatarContainer>\n        ))}\n      </Container>\n    </Wrapper>\n  );\n}\n\nexport default PlayersList;\n","import styled from \"styled-components\";\nimport { Card } from \"components\";\nimport { Sizes } from \"enums\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: auto auto auto auto;\n`;\n\nfunction shouldRevealBoard(\n  revealBoard: boolean,\n  clientId: string,\n  playerId: string\n): boolean {\n  return revealBoard || clientId === playerId;\n}\n\ntype OnlineBoardProps = {\n  players: GameClientState[];\n  playerId: string;\n  revealBoard: boolean;\n};\n\nfunction OnlineBoard({ players, playerId, revealBoard }: OnlineBoardProps) {\n  return (\n    <Container>\n      {players.map(\n        (client: GameClientState) =>\n          client.card && (\n            <>\n              <Card\n                key={`${client.socketId}/${client.card.id}`}\n                handleClick={() => {}}\n                size={Sizes.MD}\n                card={client.card}\n                fixed={true}\n                status={client.playerName.substr(0, 7)}\n                isFlipped={!shouldRevealBoard(revealBoard, client.id, playerId)}\n              />\n            </>\n          )\n      )}\n    </Container>\n  );\n}\n\nexport default OnlineBoard;\n","import styled from \"styled-components\";\n\nconst Float = styled.div`\n  float: right;\n  margin-top: -10px;\n`;\n\nexport default Float;\n","import styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Wrapper = styled.div`\n  padding: 5px 8px 0;\n`;\n\nconst Container = styled.div`\n  padding: 15px;\n  text-transform: uppercase;\n  font-size: 10px;\n  font-weight: bold;\n  background-color: #ffeb3b;\n  margin-bottom: 15px;\n  border-radius: 4px;\n  font-family: ${(props) => props.theme.fontFamily};\n  position: relative;\n  cursor: pointer;\n`;\n\nconst IconWrapper = styled.div`\n  position: absolute;\n  right: 15px;\n  top: 15px;\n`;\n\ntype BannerProps = {\n  text: string;\n  onClose?: Callback;\n};\n\nexport default function Banner({ text, onClose }: BannerProps) {\n  return (\n    <Wrapper onClick={onClose}>\n      <Container>\n        {text}\n        <IconWrapper>{onClose && <FontAwesomeIcon icon=\"times\" />}</IconWrapper>\n      </Container>\n    </Wrapper>\n  );\n}\n","import { ChangeEvent } from \"react\";\nimport { InputText } from \"components\";\nimport { useDebounceInput } from \"hooks\";\n\ntype DebouceInputTextProps = {\n  value: string;\n  onChange: (value: string) => void;\n  placeholder: string;\n};\n\nexport default function DebounceInputText({\n  value,\n  onChange,\n  placeholder,\n}: DebouceInputTextProps) {\n  const [text, setText] = useDebounceInput(value, onChange);\n\n  function handleChange(event: ChangeEvent<HTMLInputElement>) {\n    setText(event.target.value);\n  }\n\n  return (\n    <InputText value={text} onChange={handleChange} placeholder={placeholder} />\n  );\n}\n","import { useState, useEffect, useCallback } from \"react\";\nimport { debounce } from \"lodash\";\n\ntype UseDebounceInputReturn = [string, (value: string) => void];\n\nexport default function useDebounceInput(\n  value: string,\n  setter: (value: string) => void\n): UseDebounceInputReturn {\n  const [field, setField] = useState<string>(value);\n\n  const executeDebounce = useCallback(debounce(setter, 400), []);\n\n  useEffect(() => {\n    executeDebounce(field);\n  }, [field]);\n\n  return [field, setField];\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  padding: 10px;\n`;\n\nexport const CardContainer = styled.div`\n  text-align: center;\n  padding: 20px;\n`;\n\nexport const BackButton = styled.button`\n  text-transform: uppercase;\n  background-color: initial;\n  border: 0px;\n  color: ${(props) => props.theme.mainFontColor};\n  font-weight: bold;\n  margin-top: 20px;\n  cursor: pointer;\n  outline: none;\n`;\n","import { useState } from \"react\";\n\nimport { useStorage } from \"hooks\";\nimport { findFavorite } from \"helpers\";\nimport { Screens, Sizes } from \"enums\";\n\nimport * as Components from \"components\";\nimport * as Styled from \"./styled\";\n\nexport default function Offline() {\n  const { storage, i18n } = useStorage(Screens.HOME);\n  const [card, setCard] = useState<Card>();\n  const text = i18n as I18n.HomeScreen;\n\n  function handleSetCard() {\n    setCard(undefined);\n  }\n\n  return (\n    <Styled.Container>\n      {card ? (\n        <Styled.CardContainer>\n          <Components.Card\n            size={Sizes.LG}\n            card={card}\n            fixed={false}\n            isFlipped={true}\n          />\n          <Styled.BackButton onClick={handleSetCard}>\n            {text.backBtn}\n          </Styled.BackButton>\n        </Styled.CardContainer>\n      ) : (\n        <Components.CardList\n          deck={findFavorite(storage.decks)}\n          grid={storage.preferences.line}\n          handleSelect={setCard}\n          cardSize={Sizes.MD}\n        />\n      )}\n    </Styled.Container>\n  );\n}\n","import { useStorage } from \"hooks\";\nimport {\n  Select,\n  List,\n  ListItem,\n  ListTitle,\n  Float,\n  DebounceInputText,\n} from \"components\";\nimport { Languages, Screens, Themes } from \"enums\";\n\nexport default function Preferences() {\n  const { storage, actions, i18n } = useStorage(Screens.SETTINGS);\n  const text: I18n.SettingsScreen = i18n as I18n.SettingsScreen;\n\n  const settingsOptions = {\n    languages: [\n      { value: Languages.EN, label: \"En\" },\n      { value: Languages.PT_BT, label: \"Pt-br\" },\n    ],\n    themes: [\n      { value: Themes.DRACULA, label: \"Dracula\" },\n      { value: Themes.TECH, label: \"Tech\" },\n      { value: Themes.DARK_FOREST, label: \"Dark Forest\" },\n      { value: Themes.ELETRIC, label: \"Eletric\" },\n    ],\n    screens: [\n      { value: Screens.HOME, label: \"Home\" },\n      { value: Screens.SETTINGS, label: \"Settings\" },\n      { value: Screens.LOBBY, label: \"Lobby\" },\n      { value: Screens.ONLINE, label: \"Online\" },\n      { value: Screens.DECKS, label: \"Decks\" },\n    ],\n    cards: [\n      { value: 3, label: \"3\" },\n      { value: 4, label: \"4\" },\n    ],\n    wakeLock: [\n      { value: \"enable\", label: text.enableWakeLock },\n      { value: \"disable\", label: text.disableWakeLock },\n    ],\n  };\n\n  return (\n    <>\n      <ListTitle>{text.settingsListTitle}</ListTitle>\n      <List>\n        <ListItem>\n          <label>\n            {text.version}\n            <span style={{ float: \"right\" }}>\n              {storage.preferences.version}\n            </span>\n          </label>\n        </ListItem>\n        <ListItem>\n          <label>{text.language}</label>\n          <Float>\n            <Select\n              options={settingsOptions.languages}\n              value={storage.preferences.language}\n              onChange={actions.updateLanguage}\n            />\n          </Float>\n        </ListItem>\n        <ListItem>\n          <label>{text.cards}</label>\n          <Float>\n            <Select\n              options={settingsOptions.cards}\n              value={storage.preferences.line}\n              onChange={actions.updateCardsPerLine}\n            />\n          </Float>\n        </ListItem>\n        <ListItem>\n          <label>{text.theme}</label>\n          <Float>\n            <Select\n              options={settingsOptions.themes}\n              value={storage.preferences.theme}\n              onChange={actions.updateTheme}\n            />\n          </Float>\n        </ListItem>\n        <ListItem>\n          <label>{text.screen}</label>\n          <Float>\n            <Select\n              options={settingsOptions.screens}\n              value={storage.preferences.screen}\n              onChange={actions.updateInitialScreen}\n            />\n          </Float>\n        </ListItem>\n        <ListItem>\n          <label>{text.weakLock}</label>\n          <Float>\n            <Select\n              options={settingsOptions.wakeLock}\n              value={storage.preferences.wakeLock}\n              onChange={actions.updateWakeLock}\n            />\n          </Float>\n        </ListItem>\n        <ListItem>\n          <label>{text.name}</label>\n          <Float>\n            <DebounceInputText\n              value={storage.preferences.name}\n              onChange={actions.updateName}\n              placeholder={text.namePlaceholder}\n            />\n          </Float>\n        </ListItem>\n      </List>\n    </>\n  );\n}\n","import { useState } from \"react\";\nimport * as Component from \"components\";\nimport { useStorage, useRoom } from \"hooks\";\nimport { Screens } from \"enums\";\n\nexport default function Lobby() {\n  const { storage, i18n } = useStorage(Screens.LOBBY);\n  const [deckId, setDeckId] = useState(storage.decks[0].id);\n  const [roomName, setRoomName] = useState(\"\");\n  const text = i18n as I18n.LobbyScreen;\n\n  const { sharing, rooms, createRoom, shareRoom, joinRoom, deleteRoom } =\n    useRoom();\n\n  function handleShareRoom(room: Room, deckId: string) {\n    return function () {\n      shareRoom(room, deckId);\n    };\n  }\n\n  function handleJoinRoom(room: Room, deckId: string) {\n    return function () {\n      joinRoom(room, deckId);\n    };\n  }\n\n  function handleDeleteRoom(roomId: string) {\n    return function () {\n      deleteRoom(roomId);\n    };\n  }\n\n  function handleCreateRoom() {\n    createRoom(deckId, roomName);\n    setRoomName(\"\");\n  }\n\n  return (\n    <>\n      <Component.Toaster show={sharing} text={text.joinCopiedLink} />\n      <Component.ListTitle>Lobby</Component.ListTitle>\n      <Component.List>\n        <Component.ListItem>\n          <Component.CreateRoomForm\n            roomName={roomName}\n            setRoomName={setRoomName}\n            decks={storage.decks}\n            deckId={deckId}\n            setDeckId={setDeckId}\n            submit={handleCreateRoom}\n            text={text}\n          />\n        </Component.ListItem>\n        {rooms.map((room: Room) => (\n          <Component.ListItem key={room.id}>\n            <Component.RoomListItem\n              text={text}\n              room={room}\n              share={handleShareRoom(room, room.deckId)}\n              join={handleJoinRoom(room, room.deckId)}\n              remove={handleDeleteRoom(room.id)}\n            />\n          </Component.ListItem>\n        ))}\n      </Component.List>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: calc(100vh - 68px);\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  border: 1px solid ${(props) => props.theme.lineColor};\n\n  @media only screen and (max-width: 600px) {\n    margin-top: -7px;\n  }\n`;\n\nexport const HeaderPlayers = styled.div`\n  flex-grow: 1;\n`;\n\nexport const HeaderAction = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Body = styled.div`\n  flex-grow: 1;\n`;\n\nexport const Footer = styled.div`\n  padding: 0;\n`;\n\nexport const StatusContainer = styled.div`\n  padding: 0 6px;\n`;\n\nexport const Status = styled.div`\n  background-color: ${(props) => props.theme.secondaryColor};\n  text-transform: uppercase;\n  padding: 4px 6px;\n  font-size: 11px;\n  font-weight: bold;\n  border-radius: 4px;\n`;\n","import { useEffect } from \"react\";\nimport ScrollContainer from \"react-indiana-drag-scroll\";\n\nimport { useStorage, useCreateOnlineGameData } from \"hooks\";\nimport { useOnlineGame } from \"hooks\";\nimport { Sizes, Screens } from \"enums\";\nimport { alreadyJoined, isOnline, allPlayed, cardAlreadyPlayed } from \"helpers\";\n\nimport * as Components from \"components\";\nimport * as Styled from \"./styled\";\n\nfunction defaultInitClient(userId: string, userName: string) {\n  return [\n    {\n      card: null,\n      id: userId,\n      online: true,\n      socketId: null,\n      playerName: userName,\n    },\n  ];\n}\n\nexport default function Online() {\n  const { storage, actions, i18n } = useStorage(Screens.ONLINE);\n  const game = useCreateOnlineGameData();\n  const text = i18n as I18n.OnlineScreen;\n\n  const initClient = game.owner\n    ? defaultInitClient(storage.id, storage.preferences.name)\n    : [];\n\n  const { gameState, gameActions } = useOnlineGame(\n    {\n      clients: initClient,\n      config: { finishedTurn: false },\n      reconnect: false,\n    },\n    game,\n    storage.id,\n    storage.decks,\n    storage.preferences.name\n  );\n\n  useEffect(() => {\n    if (!alreadyJoined(storage.online.rooms, game.id)) {\n      actions.addRoom(game);\n    }\n  }, []);\n\n  function handleFinishTurn() {\n    gameActions.finishTurn();\n  }\n\n  function handleResetGame() {\n    gameActions.resetGame();\n  }\n\n  function handleSelectCard(card: Card) {\n    if (\n      cardAlreadyPlayed(gameState.clients, storage.id, card) ||\n      gameState.config.finishedTurn\n    ) {\n      return;\n    }\n\n    gameActions.playCard(card, storage.id);\n  }\n\n  function getGameStatus(clients: GameClientState[]) {\n    return allPlayed(clients) ? text.statusAllPlayed : text.statusWaiting;\n  }\n\n  return (\n    <Styled.Container>\n      <Styled.Header>\n        <ScrollContainer>\n          <Components.PlayersList players={gameState.clients} />\n        </ScrollContainer>\n        {game.owner && (\n          <Styled.HeaderAction>\n            <Components.OutlineButton\n              onClick={handleFinishTurn}\n              flat\n              block={false}\n            >\n              {text.revealBtn}\n            </Components.OutlineButton>\n            <Components.OutlineButton\n              onClick={handleResetGame}\n              flat\n              block={false}\n            >\n              {text.resetBtn}\n            </Components.OutlineButton>\n          </Styled.HeaderAction>\n        )}\n      </Styled.Header>\n      <Styled.Body>\n        <Components.OnlineBoard\n          revealBoard={gameState.config.finishedTurn}\n          playerId={storage.id}\n          players={gameState.clients}\n        />\n      </Styled.Body>\n      <Styled.Footer>\n        <Styled.StatusContainer>\n          <Styled.Status>{getGameStatus(gameState.clients)}</Styled.Status>\n        </Styled.StatusContainer>\n        <ScrollContainer>\n          {gameState.deck && (\n            <Components.CardList\n              handleSelect={handleSelectCard}\n              deck={gameState.deck}\n              grid={1}\n              inline={true}\n              cardSize={Sizes.MD}\n            />\n          )}\n        </ScrollContainer>\n      </Styled.Footer>\n      <Components.WaitScreen\n        show={!isOnline(gameState.clients)}\n        text=\"Waiting for host...\"\n      />\n    </Styled.Container>\n  );\n}\n","import { useStorage } from \"hooks\";\nimport { List, ListItem, ListTitle, Radio } from \"components\";\nimport { Screens } from \"enums\";\n\nexport default function Decks() {\n  const { storage, actions, i18n } = useStorage(Screens.DECKS);\n  const text: I18n.DecksScreen = i18n as I18n.DecksScreen;\n\n  function handleUpdateFavorite(deck: Deck) {\n    return function () {\n      actions.updateFavorite(deck);\n    };\n  }\n\n  return (\n    <>\n      <ListTitle>{text.decksListTitle}</ListTitle>\n      <List>\n        {storage.decks.map((deck) => (\n          <div onClick={handleUpdateFavorite(deck)} key={deck.id}>\n            <Radio active={deck.favorite} />\n            <ListItem key={deck.id}>{deck.description}</ListItem>\n          </div>\n        ))}\n      </List>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { Preferences, Offline, Lobby, Online, Decks } from \"./screens\";\nimport { Page, Navbar, Container, Banner } from \"components\";\nimport { Screens } from \"enums\";\nimport { useStorage } from \"hooks\";\n\nexport default function Routes({\n  theme,\n  initial,\n  connected,\n  text,\n}: {\n  theme: Theme;\n  initial: Screens;\n  connected: boolean;\n  text: I18n.SharedScreen;\n}) {\n  const [hideBanner, setHideBanner] = useState(connected);\n\n  useEffect(() => {\n    setHideBanner(connected);\n  }, [connected]);\n\n  function handleCloseBanner() {\n    setHideBanner(true);\n  }\n\n  return (\n    <Container>\n      <Router>\n        <Navbar theme={theme} />\n        <Page>\n          {!hideBanner && (\n            <Banner text={text.offline} onClose={handleCloseBanner} />\n          )}\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to={`/${initial}`} />\n            </Route>\n            <Route exact path={`/${Screens.HOME}`}>\n              <Offline />\n            </Route>\n            <Route exact path={`/${Screens.DECKS}`}>\n              <Decks />\n            </Route>\n            <Route path={`/${Screens.SETTINGS}`}>\n              <Preferences />\n            </Route>\n            <Route path={`/${Screens.LOBBY}`}>\n              <Lobby />\n            </Route>\n            <Route path={`/${Screens.ONLINE}`}>\n              <Online />\n            </Route>\n          </Switch>\n        </Page>\n      </Router>\n    </Container>\n  );\n}\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport { StorageService } from \"services\";\nimport Routes from \"./routes\";\nimport { StorageContext } from \"contexts\";\nimport { themes, i18n } from \"static\";\nimport { GlobalStyle } from \"global-style\";\nimport { useWakeLock, useConnection, useThemeStatus } from \"hooks\";\nimport { Screens } from \"enums\";\n\nfunction App() {\n  const [storage, setStorage] = useState(StorageService.get());\n  const { connected } = useConnection();\n  const theme = themes[storage.preferences.theme];\n  const text = i18n[storage.preferences.language][Screens.SHARED];\n  const { setThemeColor } = useThemeStatus(theme.backgroundColor);\n  useWakeLock(storage.preferences.wakeLock);\n\n  useEffect(() => {\n    setThemeColor(theme.backgroundColor);\n  }, [theme]);\n\n  return (\n    <StorageContext.Provider value={{ storage, setStorage }}>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Routes\n          connected={connected}\n          theme={theme}\n          initial={storage.preferences.screen}\n          text={text}\n        />\n      </ThemeProvider>\n    </StorageContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nexport default function useConnection() {\n  const [connected, setNetwork] = useState(window.navigator.onLine);\n\n  const updateNetwork = () => {\n    setNetwork(window.navigator.onLine);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"offline\", updateNetwork);\n    window.addEventListener(\"online\", updateNetwork);\n\n    return () => {\n      window.removeEventListener(\"offline\", updateNetwork);\n      window.removeEventListener(\"online\", updateNetwork);\n    };\n  }, []);\n\n  return { connected };\n}\n","import { useState, useEffect } from \"react\";\n\nconst META_QUERY = \"meta[name=theme-color]\";\n\nexport default function useThemeStatus(color: string) {\n  const [themeColor, setThemeColor] = useState(color);\n  const [meta] = useState<Element | null>(document.querySelector(META_QUERY));\n\n  useEffect(() => {\n    meta?.setAttribute(\"content\", themeColor);\n  }, [themeColor]);\n\n  return { themeColor, setThemeColor };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport {\n  faEdit,\n  faMugHot,\n  faLongArrowAltLeft,\n  faTrash,\n  faSyncAlt,\n  faShareAlt,\n  faAngleRight,\n  faCog,\n  faInfinity,\n  faBoxOpen,\n  faTimes,\n  faServer,\n  faTh,\n  faGlobeAmericas,\n  faCrown,\n  faUsers,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { StorageService } from \"services\";\nimport { decks, preferences } from \"static\";\nimport { generateId } from \"helpers\";\nimport { IdScopes } from \"enums\";\n\nlibrary.add(faEdit);\nlibrary.add(faBoxOpen);\nlibrary.add(faMugHot);\nlibrary.add(faLongArrowAltLeft);\nlibrary.add(faTrash);\nlibrary.add(faSyncAlt);\nlibrary.add(faShareAlt);\nlibrary.add(faAngleRight);\nlibrary.add(faCog);\nlibrary.add(faInfinity);\nlibrary.add(faTimes);\nlibrary.add(faServer);\nlibrary.add(faGlobeAmericas);\nlibrary.add(faTh);\nlibrary.add(faCrown);\nlibrary.add(faUsers);\nlibrary.add(faSpinner);\n\nStorageService.setup({\n  id: generateId(IdScopes.USER),\n  decks,\n  preferences,\n  online: { rooms: [] },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}